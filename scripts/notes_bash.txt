## Replace string pattern in all .def files in a directory
for f in *.def; do echo "processing " $f; awk '{sub("Author Olaitan","Author laitanawe@gmail.com")}1' $f > temp.txt && mv temp.txt $f; done

## First day of New Year 2022: Rename directories in present working directory from e.g. 01_jan20XX to 01_jan2022
for i in `ls`; do echo $i | sed 's/XX/22/' | xargs mv -fv $i ; done

## Beginning of New Year 2022: Replicate directories in Pictures: ../../template_NN_mon20XX/01mar/ into each working day in 2022
## Do this after you cd into a month e.g. assuming you're excluding January. $cd into 01_jan2022
## Then run this command
a=2; while [ $a -lt 13 ]; do if [ $a -gt 9 ]; then echo "../"$a && cd "../"$a*; else echo "../0"$a && cd "../0"$a*; fi; for i in $(ls); do echo "now copying into:"$i/ && cp -rv ../../template_NN_mon20XX/01mar/* $i; done; a=`expr $a + 1`; done

## List directories in pwd and echo directories that do not have the subdirectory named "output"
for t in `ls -d */`; do if ! [ -d $t/output ]; then echo $t; fi; done

## List directories in pwd and copy cancer_prostate/output to directories that do not have the subdirectory "output"
for t in `ls -d */`; do if ! [ -d $t/output ]; then cp -rv cancer_prostate/output $t; fi; done
## You can then manually do this:
cd each of those $t
git add *
git commit -am "Add new scripts" & git push

# Iteratively copy steps.txt into workflow dir for all Git Repos if steps.txt doesn't exist [ -e $file ]
for i in `ls`; do if ! [ -e $i/workflow/steps.txt ]; then echo $i; cp -v ~/Documents/steps.txt $i/workflow/; fi; done

# Iteratively copy project_lifecyle.txt into workflow dir for all Git Repos that are not ace2_covid
# If pwd is ace2_covid, then run this command (relative paths work)
for f in `ls ../`; do if [ $f != "ace2_covid" ]; then echo $f; cp -v workflow/project_lifecyle.txt ../$f/workflow; fi; done

## Here's my cheat sheet of conditional in bash:
"A ; B" Run A and then B, regardless of success of A (execute subsequent commands ONLY if B is true)
"A && B" Run B if A succeeded (execute subsequent commands ONLY if BOTH B and A are true)
"A || B" Run B if A failed (execute subsequent commands if ANY of B or A is true)
"A &" Run A in background. (execute command A as a backgroud process)
## To exclude cancer_prostate AND ALSO exclude spodoptera_temperature from the copy, do:
for d in `ls`; do if [ $d != 'cancer_prostate' ] && [ $d != 'spodoptera_temperature' ] ; then echo "Processing: "$d; cp -v spodoptera_temperature/docs/papers_url.txt $d/docs/; fi; done

## To exclude circrna_biomarker AND ALSO exclude gNBS_explore from the copy, do:
for d in `ls`; do if [ $d != 'circrna_biomarker' ] && [ $d != 'gNBS_explore' ]; then echo $d && cp -v circrna_biomarker/accessions/accessions.txt $d/accessions/; fi; done

## To exclude gNBS_explore strictly from the echo, do: (circrna_biomarker will be included in the echo)
for d in `ls`; do if [ $d != 'circrna_biomarker' ] ; [ $d != 'gNBS_explore' ]; then echo $d; echo "2nd "$d; fi; done
