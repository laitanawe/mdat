==deffile==
Bootstrap: docker
From: ubuntu:18.04

%post

  sudo apt-get update
  sudo apt install -y dialog=1.3-20201126-1
  # Local related configuration
  sudo apt-get install -y locales
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen
  update-locale "LANG=en_US.UTF-8"

  # Development Libraries for ubuntu (Try to lock down versions)
  sudo apt-get install -y \
    build-essential \
    libssl-dev \
    uuid-dev \
    libgpgme11-dev \
    squashfs-tools \
    libseccomp-dev \
    wget=1.21-1+b1 \
    apt-get install -y zip=3.0-12 \
    apt-get install -y perl=5.32.1-4+deb11u2 \
    pkg-config \
    git \
    cryptsetup

  #Tensorflow, Javascript,
  #Python3 Virtual Environment
  sudo apt install python3-venv=3.6.7-1
  mkdir -pv ~/my_shared_data_folder/tensorflow
  cd ~/my_shared_data_folder/tensorflow
  python3 -m venv rego_venv
  source rego_venv/bin/activate
  # Tensorflow installation requires pip v19 or higher.
  pip install --upgrade pip
  pip install --upgrade tensorflow
  # If you have a dedicated NVIDIA GPU, install tensorflow-gpu instead.
  # To verify the Tensorflow installation within the rego_virtual environment,
  python -c 'import tensorflow as tf; print(tf.__version__)'
  #Once you are done with your work, type deactivate to return to normal shell

  # Install numpy into the virtual environment, numpy already installed
  pip install --upgrade numpy
  # Install scikit (SciPy is auto-installed and it contains numpy functions) into the virtual environment
  pip install --upgrade scikit-learn
  # Install pandas into the virtual environment
  pip install --upgrade pandas
  # Install Biopython into the virtual environment
  pip install --upgrade biopython
  # Install Seaborn into the virtual Environment
  pip install seaborn
  # Install BLAST into the virtual Environment
  apt-get install -y ncbi-blast+=2.6.0-1

%runscript
  echo "This container is based on Ubuntu 18.04"
  echo
  #spit out software versions

  #Data Download Tools: These packages come with the VM
  wget --version | head -1
  zip --version | head -2 | tail -1 | sed 's/^This is //'
  perl --version | head -2 | tail -1 | sed 's/^This is p/P/'
  python --version | head -2 | tail -1 | sed 's/^ *//'
  python3 --version | head -2 | tail -1 | sed 's/^ *//'
  echo -n "Tensorflow: "; python -c 'import tensorflow as tf; print(tf.__version__)' 2>&1 | tail -1
  echo -n "scikit-learn: "; python -c 'import sklearn as sk; print(sk.__version__)'
  echo -n "Scipy: "; python -c 'import scipy as sc; print(sc.__version__)' 2>&1 | tail -1
  echo -n "Pandas: "; python -c 'import pandas as pd; print(pd.__version__)' 2>&1 | tail -1
  echo -n "BioPython: "; python -c 'import biopython as bio; print(bio.__version__)'
  echo -n "Seaborn: "; python -c 'import seaborn as sea; print(sea.__version__)'
  blastx -h | tail -3 | head -1 | sed 's/^ *Translated Query-Protein Subject B/B/'

  #Bionformatics Tools:
  R --version | head -n 1
  echo -n "Bioconductor:"; Rscript -e 'BiocManager::version()' | sed 's/\[1]//' | sed 's/‘//g' | sed 's/’//g' ## Display the Bioconductor version (formatted)

%labels
  Author laitanawe@gmail.com
  Version 0.1
  Date jan15_2022

%help
  This definition file builds packages for multi-omic data analysis.
